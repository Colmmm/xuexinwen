version: '3'
services:
  frontend:
    build:
      context: .
    image: xue_frontend
    ports:
      - "3000:80"  # port 3000:80 for development and 80:80 for production
    volumes:
          - .:/app
          # Mount Nginx configuration
          - ./nginx.conf.development:/etc/nginx/conf.d/default.conf  # for development
          #- ./nginx.conf.production:/etc/nginx/conf.d/default.conf  # production
    environment:
      - REACT_APP_PRODUCTION=false # this only sets this variable for runtime env not the build env
      # remember to change it for the build env which is defined in the frontend Dockerfile

  backend:
    build:
      context: ./backend
    image: xue_backend
    ports:
      - "5000:5000"  # Expose the Flask backend on port 5000
    volumes:
      - ./backend:/app
    environment:
      - BACKEND_PRODUCTION=false
      - MYSQL_ROOT_PASSWORD=${XXW_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${XXW_MYSQL_DATABASE}
      - MYSQL_USER=${XXW_MYSQL_USER}
      - MYSQL_PASSWORD=${XXW_MYSQL_PASSWORD}

  mysql:
    #build: 
      #context: ./backend/database
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${XXW_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${XXW_MYSQL_DATABASE}
      - MYSQL_USER=${XXW_MYSQL_USER}
      - MYSQL_PASSWORD=${XXW_MYSQL_PASSWORD}
    volumes:
      - ./backend/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - mysql_data:/var/lib/mysql
      - ./backend/:/app

#  migrate_json2mysql:
    #image: python:3.9
    #volumes:
      #- ./backend/articles_test:/app/articles_test
      #- ./backend/articles:/app/articles
      #- ./backend/database/migrate_from_json_to_sql.py:/app/migrate_from_json_to_sql.py
      #- ./backend/database/setup.sql:/app/setup.sql
    #depends_on:
      #- mysql
    #environment:
      #- MYSQL_ROOT_PASSWORD=${XXW_MYSQL_ROOT_PASSWORD}
      #- MYSQL_DATABASE=${XXW_MYSQL_DATABASE}
      #- MYSQL_USER=${XXW_MYSQL_USER}
      #- MYSQL_PASSWORD=${XXW_MYSQL_PASSWORD}
    #command: ["bash", "-c", "pip install mysql-connector-python && python /app/migrate_from_json_to_sql.py"]

  #news_fetcher:
    #build:
      #context: ./backend/fetch_news
    #image: xue_fetch_news
    #volumes:
      #- ./backend/:/app
    #environment:
      #- OPENAI_API_KEY=$OPENAI_API_KEY
    #restart: always

volumes:
  mysql_data:
